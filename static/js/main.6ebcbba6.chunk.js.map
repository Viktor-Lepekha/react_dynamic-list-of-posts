{"version":3,"sources":["api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","posts","data","unfilteredPosts","filteredPosts","filter","post","getPostDetails","postId","detailsFromServer","details","Loader","className","PostsList","selectedPostId","selectPost","map","key","id","body","type","onClick","NewCommentForm","addComment","useState","name","setName","email","setEmail","setBody","refreshComments","placeholder","value","onChange","event","target","getPostComments","comments","unfilteredComments","filteredComments","comment","removeComment","method","JSON","stringify","PostDetails","setPost","setComments","commentsShown","showComments","getComments","commentsToShow","deleteComment","pushComment","useEffect","postToShow","updatePost","length","App","setUserId","setPosts","setSelectedPostID","postsToShow","updatePosts","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ebcbba6.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const posts = await response.json();\n  const unfilteredPosts = await posts.data;\n\n  if (userId === 0) {\n    return unfilteredPosts;\n  }\n\n  const filteredPosts = unfilteredPosts.filter(post => post.userId === userId);\n\n  return filteredPosts;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const detailsFromServer = await response.json();\n  const details = await detailsFromServer.data;\n\n  return details;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, selectedPostId, selectPost }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          className=\"PostsList__item\"\n          key={post.id}\n        >\n          <div>\n            <b>\n              {`[User #${post.userId}]:`}\n            </b>\n            {post.body}\n          </div>\n          {selectedPostId === post.id ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => selectPost(0)}\n            >\n              Close\n            </button>\n          )\n            : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => selectPost(post.id)}\n              >\n                Open\n              </button>\n            )}\n        </li>\n\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const refreshComments = async() => {\n    await addComment({\n      postId,\n      name,\n      email,\n      body,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={() => refreshComments()}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const comments = await response.json();\n  const unfilteredComments = await comments.data;\n\n  if (postId === 0) {\n    return unfilteredComments;\n  }\n\n  const filteredComments = unfilteredComments\n    .filter(comment => comment.postId === postId);\n\n  return filteredComments;\n};\n\nexport const removeComment = async(id) => {\n  await fetch(`${BASE_URL}/comments/${id}`, { method: 'DELETE' });\n};\n\nexport const addComment = async(comment) => {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, removeComment, addComment } from '../../api/comments';\nimport { Loader } from '../Loader';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentsShown, showComments] = useState(true);\n\n  const getComments = async() => {\n    const commentsToShow = await getPostComments(selectedPostId);\n\n    setComments(commentsToShow);\n  };\n\n  const deleteComment = async(id) => {\n    await removeComment(id);\n\n    getComments();\n  };\n\n  const pushComment = async(comment) => {\n    await addComment(comment);\n\n    getComments();\n  };\n\n  useEffect(() => {\n    const updatePost = async() => {\n      const postToShow = await getPostDetails(selectedPostId);\n\n      setPost(postToShow);\n    };\n\n    updatePost();\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    getComments();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        {post ? <p>{post.body}</p>\n          : <Loader />\n        }\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => showComments(!commentsShown)}\n        >\n          {commentsShown ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {commentsShown ? comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => deleteComment(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))\n            : <></>}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post ? post.id : 0}\n            addComment={pushComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getUserPosts } from './api/posts';\nimport { Loader } from './components/Loader';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostID] = useState(0);\n\n  const handleChange = (event) => {\n    setUserId(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    const updatePosts = async() => {\n      const postsToShow = await getUserPosts(userId);\n\n      setPosts(postsToShow);\n    };\n\n    updatePosts();\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={handleChange}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {posts.length === 0 ? <Loader />\n            : (\n              <PostsList\n                posts={posts}\n                selectedPostId={selectedPostId}\n                selectPost={setSelectedPostID}\n              />\n            )\n        }\n\n        </div>\n        {selectedPostId === 0 ? <></>\n          : (\n            <div className=\"App__content\">\n              <PostDetails selectedPostId={selectedPostId} />\n            </div>\n          )\n      }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}